{"ast":null,"code":"export default class SwapiService {\n  constructor() {\n    this._apiBase = 'https://swapi.co/api';\n  }\n\n  async getResourse(url) {\n    let res = await fetch(`${this._apiBase}${url}`);\n\n    if (!res.ok) {\n      throw new Error(`Could not fetch ${url}, ${res.status}`);\n    }\n\n    return await res.json;\n  }\n\n  getAllPeaple() {\n    return this.getResourse(`/people/`);\n  }\n\n  getAllPerson(id) {\n    return this.getResourse(`/people/${id}`);\n  }\n\n}\nconst swapi = new SwapiService();\nswapi.getAllPeaple().then(body => console.log(body));","map":{"version":3,"sources":["/Users/vardges/Desktop/react projects/swapi/src/services/SwapiService.js"],"names":["SwapiService","_apiBase","getResourse","url","res","fetch","ok","Error","status","json","getAllPeaple","getAllPerson","id","swapi","then","body","console","log"],"mappings":"AAEA,eAAe,MAAMA,YAAN,CAAmB;AAAA;AAAA,SAC9BC,QAD8B,GACnB,sBADmB;AAAA;;AAE9B,QAAMC,WAAN,CAAkBC,GAAlB,EAAuB;AACnB,QAAIC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAE,KAAKJ,QAAS,GAAEE,GAAI,EAAxB,CAArB;;AACA,QAAI,CAACC,GAAG,CAACE,EAAT,EAAa;AACT,YAAM,IAAIC,KAAJ,CAAW,mBAAkBJ,GAAI,KAAIC,GAAG,CAACI,MAAO,EAAhD,CAAN;AACH;;AACD,WAAO,MAAMJ,GAAG,CAACK,IAAjB;AACH;;AACDC,EAAAA,YAAY,GAAG;AACX,WAAO,KAAKR,WAAL,CAAkB,UAAlB,CAAP;AACH;;AACDS,EAAAA,YAAY,CAACC,EAAD,EAAK;AACb,WAAO,KAAKV,WAAL,CAAkB,WAAUU,EAAG,EAA/B,CAAP;AACH;;AAd6B;AAgBlC,MAAMC,KAAK,GAAG,IAAIb,YAAJ,EAAd;AACAa,KAAK,CAACH,YAAN,GAAqBI,IAArB,CAA2BC,IAAD,IAAUC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAApC","sourcesContent":["\n\nexport default class SwapiService {\n    _apiBase = 'https://swapi.co/api'\n    async getResourse(url) {\n        let res = await fetch(`${this._apiBase}${url}`);\n        if (!res.ok) {\n            throw new Error(`Could not fetch ${url}, ${res.status}`)\n        }\n        return await res.json\n    }\n    getAllPeaple() {\n        return this.getResourse(`/people/`);\n    }\n    getAllPerson(id) {\n        return this.getResourse(`/people/${id}`);\n    }\n}\nconst swapi = new SwapiService();\nswapi.getAllPeaple().then((body) => console.log(body))"]},"metadata":{},"sourceType":"module"}