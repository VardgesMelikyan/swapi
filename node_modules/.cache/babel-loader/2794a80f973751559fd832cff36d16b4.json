{"ast":null,"code":"import { Component } from 'react';\nexport default class SwapiService extends Component {\n  constructor(...args) {\n    super(...args);\n    this._apiBase = 'https://swapi.co/api';\n\n    this.getResourse = async url => {\n      let res = await fetch(`${this._apiBase}${url}`);\n\n      if (!res.ok) {\n        throw new Error(`Could not fetch ${this._apiBase}${url}, ${res.status}`);\n      }\n\n      return await res.json();\n    };\n\n    this.getAllPeaple = async () => {\n      let res = await this.getResourse(`/people/`);\n      return res.results.map(this._transformPerson);\n    };\n\n    this.getPerson = async id => {\n      const person = await this.getResourse(`/people/${id}/`);\n      return this._transformPerson(person);\n    };\n\n    this.getAllPlanets = async () => {\n      const res = await this.getResourse(`/planets/`);\n      return res.results.map(this._transformPlanet);\n    };\n\n    this.getPlanet = async id => {\n      const planet = await this.getResourse(`/planets/${id}/`);\n      return this._transformPlanet(planet);\n    };\n\n    this.getAllStarships = async () => {\n      let res = await this.getResourse(`/starships/`);\n      return res.results.map(this._transformStarship);\n    };\n\n    this.getStarship = async id => {\n      return this.getResourse(`/starships/${id}/`);\n    };\n\n    this._transformPlanet = planet => {\n      return {\n        id: this._extractId(planet.url),\n        name: planet.name,\n        population: planet.population,\n        rotationPeriod: planet.rotation_period,\n        diameter: planet.diameter\n      };\n    };\n\n    this._transformPerson = person => {\n      return {\n        id: this._extractId(person.url),\n        name: person.name,\n        gender: person.gender,\n        birthYear: person.birthYear,\n        eyeColor: person.eyeColor\n      };\n    };\n\n    this._transformStarship = starship => {\n      return {\n        id: this._extractId(starship.url),\n        name: starship.name,\n        model: starship.model,\n        manufacruter: starship.manufacturer,\n        costInCreadits: starship.costInCreadits,\n        length: starship.length,\n        crew: starship.crew,\n        passengers: starship.passengers,\n        cargoCapasity: starship.cargoCapasity\n      };\n    };\n  }\n\n  _extractId(item) {\n    const idRegExp = /\\/([0-9]*)\\/$/;\n    return item.match(idRegExp)[1];\n  }\n\n}","map":{"version":3,"sources":["/Users/vardges/Desktop/react projects/swapi/src/services/SwapiService.js"],"names":["Component","SwapiService","_apiBase","getResourse","url","res","fetch","ok","Error","status","json","getAllPeaple","results","map","_transformPerson","getPerson","id","person","getAllPlanets","_transformPlanet","getPlanet","planet","getAllStarships","_transformStarship","getStarship","_extractId","name","population","rotationPeriod","rotation_period","diameter","gender","birthYear","eyeColor","starship","model","manufacruter","manufacturer","costInCreadits","length","crew","passengers","cargoCapasity","item","idRegExp","match"],"mappings":"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","sourcesContent":["import { Component } from 'react'\n\nexport default class SwapiService extends Component {\n    _apiBase = 'https://swapi.co/api';\n\n    getResourse = async (url) => {\n        let res = await fetch(`${this._apiBase}${url}`);\n        if (!res.ok) {\n            throw new Error(`Could not fetch ${this._apiBase}${url}, ${res.status}`)\n        }\n        return await res.json()\n    }\n\n    getAllPeaple = async () => {\n        let res = await this.getResourse(`/people/`);\n        return res.results.map(this._transformPerson);\n    }\n    getPerson = async (id) => {\n        const person = await this.getResourse(`/people/${id}/`);\n        return this._transformPerson(person)\n    }\n\n    getAllPlanets = async () => {\n        const res = await this.getResourse(`/planets/`);\n        return res.results.map(this._transformPlanet);\n    }\n    getPlanet = async (id) => {\n        const planet = await this.getResourse(`/planets/${id}/`)\n        return this._transformPlanet(planet);\n    }\n\n    getAllStarships = async () => {\n        let res = await this.getResourse(`/starships/`);\n        return res.results.map(this._transformStarship);\n    }\n    getStarship = async (id) => {\n        return this.getResourse(`/starships/${id}/`);\n    }\n    _extractId(item) {\n        const idRegExp = /\\/([0-9]*)\\/$/\n        return item.match(idRegExp)[1]\n    }\n    _transformPlanet = (planet) => {\n        return {\n            id: this._extractId(planet.url),\n            name: planet.name,\n            population: planet.population,\n            rotationPeriod: planet.rotation_period,\n            diameter: planet.diameter\n        }\n    }\n    _transformPerson = (person) => {\n        return {\n            id: this._extractId(person.url),\n            name: person.name,\n            gender: person.gender,\n            birthYear: person.birthYear,\n            eyeColor: person.eyeColor\n        }\n    }\n    _transformStarship = (starship) => {\n        return {\n            id: this._extractId(starship.url),\n            name: starship.name,\n            model: starship.model,\n            manufacruter: starship.manufacturer,\n            costInCreadits: starship.costInCreadits,\n            length: starship.length,\n            crew: starship.crew,\n            passengers: starship.passengers,\n            cargoCapasity: starship.cargoCapasity\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}