{"ast":null,"code":"import React, { Component } from 'react';\nexport default class SwapiService extends Component {\n  constructor(...args) {\n    super(...args);\n    this._apiBase = 'https://swapi.co/api';\n  }\n\n  async getResourse(url) {\n    let res = await fetch(`${this._apiBase}${url}`);\n\n    if (!res.ok) {\n      throw new Error(`Could not fetch ${this._apiBase}${url}, ${res.status}`);\n    }\n\n    return await res.json();\n  }\n\n  async getAllPeaple() {\n    let res = await this.getResourse(`/people/`);\n    return res.results;\n  }\n\n  getPerson(id) {\n    return this.getResourse(`/people/${id}`);\n  }\n\n  async getAllPlanets() {\n    let res = await this.getResourse(`/planets/`);\n    return res.results.map(this._transformPlanet);\n  }\n\n  async getPlanet(id) {\n    const planet = await this.getResourse(`/planets/${id}`);\n    return this._transformPlanet(planet);\n  }\n\n  async getAllStarships() {\n    let res = await this.getResourse(`/starships/`);\n    return res.results;\n  }\n\n  getStarship(id) {\n    return this.getResourse(`/starships/${id}`);\n  }\n\n  _extractId(item) {\n    const idRegExp = /\\/([0-9]*)\\/$/;\n    return item.match(idRegExp)[1];\n  }\n\n  _transformPlanet(planet) {\n    return {\n      id: this._extractId(planet.url),\n      name: planet.name,\n      population: planet.population,\n      rotationPeriod: planet.rotation_period,\n      diameter: planet.diameter\n    };\n  }\n\n  _transformPerson(person) {\n    return {\n      id: this._extractId(person.url)\n    };\n  }\n\n}","map":{"version":3,"sources":["/Users/vardges/Desktop/react projects/swapi/src/services/SwapiService.js"],"names":["React","Component","SwapiService","_apiBase","getResourse","url","res","fetch","ok","Error","status","json","getAllPeaple","results","getPerson","id","getAllPlanets","map","_transformPlanet","getPlanet","planet","getAllStarships","getStarship","_extractId","item","idRegExp","match","name","population","rotationPeriod","rotation_period","diameter","_transformPerson","person"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,eAAe,MAAMC,YAAN,SAA2BD,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAChDE,QADgD,GACrC,sBADqC;AAAA;;AAGhD,QAAMC,WAAN,CAAkBC,GAAlB,EAAuB;AACnB,QAAIC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAE,KAAKJ,QAAS,GAAEE,GAAI,EAAxB,CAArB;;AACA,QAAI,CAACC,GAAG,CAACE,EAAT,EAAa;AACT,YAAM,IAAIC,KAAJ,CAAW,mBAAkB,KAAKN,QAAS,GAAEE,GAAI,KAAIC,GAAG,CAACI,MAAO,EAAhE,CAAN;AACH;;AACD,WAAO,MAAMJ,GAAG,CAACK,IAAJ,EAAb;AACH;;AAED,QAAMC,YAAN,GAAqB;AACjB,QAAIN,GAAG,GAAG,MAAM,KAAKF,WAAL,CAAkB,UAAlB,CAAhB;AACA,WAAOE,GAAG,CAACO,OAAX;AACH;;AACDC,EAAAA,SAAS,CAACC,EAAD,EAAK;AACV,WAAO,KAAKX,WAAL,CAAkB,WAAUW,EAAG,EAA/B,CAAP;AACH;;AAED,QAAMC,aAAN,GAAsB;AAClB,QAAIV,GAAG,GAAG,MAAM,KAAKF,WAAL,CAAkB,WAAlB,CAAhB;AACA,WAAOE,GAAG,CAACO,OAAJ,CAAYI,GAAZ,CAAgB,KAAKC,gBAArB,CAAP;AACH;;AACD,QAAMC,SAAN,CAAgBJ,EAAhB,EAAoB;AAChB,UAAMK,MAAM,GAAG,MAAM,KAAKhB,WAAL,CAAkB,YAAWW,EAAG,EAAhC,CAArB;AACA,WAAO,KAAKG,gBAAL,CAAsBE,MAAtB,CAAP;AACH;;AAED,QAAMC,eAAN,GAAwB;AACpB,QAAIf,GAAG,GAAG,MAAM,KAAKF,WAAL,CAAkB,aAAlB,CAAhB;AACA,WAAOE,GAAG,CAACO,OAAX;AACH;;AACDS,EAAAA,WAAW,CAACP,EAAD,EAAK;AACZ,WAAO,KAAKX,WAAL,CAAkB,cAAaW,EAAG,EAAlC,CAAP;AACH;;AACDQ,EAAAA,UAAU,CAACC,IAAD,EAAO;AACb,UAAMC,QAAQ,GAAG,eAAjB;AACA,WAAOD,IAAI,CAACE,KAAL,CAAWD,QAAX,EAAqB,CAArB,CAAP;AACH;;AACDP,EAAAA,gBAAgB,CAACE,MAAD,EAAS;AACrB,WAAO;AACHL,MAAAA,EAAE,EAAE,KAAKQ,UAAL,CAAgBH,MAAM,CAACf,GAAvB,CADD;AAEHsB,MAAAA,IAAI,EAAEP,MAAM,CAACO,IAFV;AAGHC,MAAAA,UAAU,EAAER,MAAM,CAACQ,UAHhB;AAIHC,MAAAA,cAAc,EAAET,MAAM,CAACU,eAJpB;AAKHC,MAAAA,QAAQ,EAAEX,MAAM,CAACW;AALd,KAAP;AAOH;;AACDC,EAAAA,gBAAgB,CAACC,MAAD,EAAS;AACrB,WAAO;AACHlB,MAAAA,EAAE,EAAE,KAAKQ,UAAL,CAAgBU,MAAM,CAAC5B,GAAvB;AADD,KAAP;AAIH;;AArD+C","sourcesContent":["import React, { Component } from 'react'\n\nexport default class SwapiService extends Component {\n    _apiBase = 'https://swapi.co/api';\n\n    async getResourse(url) {\n        let res = await fetch(`${this._apiBase}${url}`);\n        if (!res.ok) {\n            throw new Error(`Could not fetch ${this._apiBase}${url}, ${res.status}`)\n        }\n        return await res.json()\n    }\n\n    async getAllPeaple() {\n        let res = await this.getResourse(`/people/`);\n        return res.results;\n    }\n    getPerson(id) {\n        return this.getResourse(`/people/${id}`);\n    }\n\n    async getAllPlanets() {\n        let res = await this.getResourse(`/planets/`);\n        return res.results.map(this._transformPlanet);\n    }\n    async getPlanet(id) {\n        const planet = await this.getResourse(`/planets/${id}`)\n        return this._transformPlanet(planet);\n    }\n\n    async getAllStarships() {\n        let res = await this.getResourse(`/starships/`);\n        return res.results;\n    }\n    getStarship(id) {\n        return this.getResourse(`/starships/${id}`);\n    }\n    _extractId(item) {\n        const idRegExp = /\\/([0-9]*)\\/$/\n        return item.match(idRegExp)[1]\n    }\n    _transformPlanet(planet) {\n        return {\n            id: this._extractId(planet.url),\n            name: planet.name,\n            population: planet.population,\n            rotationPeriod: planet.rotation_period,\n            diameter: planet.diameter\n        }\n    }\n    _transformPerson(person) {\n        return {\n            id: this._extractId(person.url),\n\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}