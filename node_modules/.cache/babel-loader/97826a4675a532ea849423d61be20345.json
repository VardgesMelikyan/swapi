{"ast":null,"code":"var _jsxFileName = \"/Users/vardges/Desktop/react projects/swapi/src/components/PersonDetails/PersonDetails.js\";\nimport React, { Component } from 'react';\nimport SwapiService from '../../services/SwapiService';\nimport PersonDetailsView from './PersonDetailsView';\nimport Loading from '../Loading';\nimport ErrorIndicator from '../Alerts/ErrorIndicator';\nimport './PersonDetails.css';\nexport default class PersonDetails extends Component {\n  constructor(...args) {\n    super(...args);\n    this.swapiService = new SwapiService();\n    this.state = {\n      person: null,\n      error: false,\n      loading: true\n    };\n\n    this.onError = err => {\n      this.setState({\n        error: true,\n        loading: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.updatePerson();\n  }\n\n  updatePerson() {\n    const {\n      personId\n    } = this.props;\n\n    if (!personId) {\n      return;\n    }\n\n    this.swapiService.getPerson(personId).then(person => {\n      this.setState({\n        person\n      });\n    }).catch(this.onError);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.personId !== prevProps.personId) {\n      this.updatePerson();\n    }\n  }\n\n  render() {\n    if (!this.state.person) {\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Select a person from a list\");\n    }\n\n    const {\n      loading,\n      error\n    } = this.state;\n    const hasData = !(loading || error);\n    const errorIndicator = error ? React.createElement(ErrorIndicator, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }) : null;\n    const spinner = loading ? React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }) : null;\n    const {\n      id,\n      name,\n      gender,\n      birthYear,\n      eyeColor\n    } = this.state.person;\n    return React.createElement(\"div\", {\n      className: \"person-details card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"person-image\",\n      src: `https://starwars-visualguide.com/assets/img/characters/${id}.jpg`,\n      alt: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, name), React.createElement(\"ul\", {\n      className: \"list-group list-group-flush\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"term\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Gender\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, gender)), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"term\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Birth Year\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, birthYear)), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"term\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Eye Color\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, eyeColor)))));\n  }\n\n}","map":{"version":3,"sources":["/Users/vardges/Desktop/react projects/swapi/src/components/PersonDetails/PersonDetails.js"],"names":["React","Component","SwapiService","PersonDetailsView","Loading","ErrorIndicator","PersonDetails","swapiService","state","person","error","loading","onError","err","setState","componentDidMount","updatePerson","personId","props","getPerson","then","catch","componentDidUpdate","prevProps","render","hasData","errorIndicator","spinner","id","name","gender","birthYear","eyeColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport SwapiService from '../../services/SwapiService';\nimport PersonDetailsView from './PersonDetailsView';\nimport Loading from '../Loading';\nimport ErrorIndicator from '../Alerts/ErrorIndicator';\nimport './PersonDetails.css';\n\nexport default class PersonDetails extends Component {\n    swapiService = new SwapiService();\n    state = {\n        person: null,\n        error: false,\n        loading: true\n    }\n    componentDidMount() {\n        this.updatePerson();\n    }\n\n    updatePerson() {\n        const { personId } = this.props\n        if (!personId) {\n            return\n        }\n        this.swapiService\n            .getPerson(personId)\n            .then((person) => {\n                this.setState({\n                    person\n                })\n            })\n            .catch(this.onError)\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.personId !== prevProps.personId) {\n            this.updatePerson();\n        }\n    }\n\n    onError = (err) => {\n        this.setState({\n            error: true,\n            loading: false\n        })\n    }\n    render() {\n        if (!this.state.person) {\n            return <span>Select a person from a list</span>\n        }\n        const { loading, error } = this.state\n        const hasData = !(loading || error)\n        const errorIndicator = error ? <ErrorIndicator /> : null\n        const spinner = loading ? <Loading /> : null\n        const { id, name, gender, birthYear, eyeColor } = this.state.person\n        return (\n            <div className=\"person-details card\">\n                <img className=\"person-image\"\n                    src={`https://starwars-visualguide.com/assets/img/characters/${id}.jpg`} alt={id} />\n\n                <div className=\"card-body\">\n                    <h4>{name}</h4>\n                    <ul className=\"list-group list-group-flush\">\n                        <li className=\"list-group-item\">\n                            <span className=\"term\">Gender</span>\n                            <span>{gender}</span>\n                        </li>\n                        <li className=\"list-group-item\">\n                            <span className=\"term\">Birth Year</span>\n                            <span>{birthYear}</span>\n                        </li>\n                        <li className=\"list-group-item\">\n                            <span className=\"term\">Eye Color</span>\n                            <span>{eyeColor}</span>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}